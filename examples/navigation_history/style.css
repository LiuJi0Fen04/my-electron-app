body {
    margin: 0;
    font-family: Arial, sans-serif;
    background-color: #f0f0f0;
}




#controls {
    display: flex;
    align-items: center;
    padding: 10px;
    background-color: #ffffff;
    border-bottom: 1px solid #ccc;
}
button {
    margin-right: 10px;
    padding: 8px 12px;
    font-size: 14px;
    background-color: #4CAF50;
    color: white;
    border: none;
    cursor: pointer;
    transition: background-color 0.3s;
}
button:hover {
    background-color: #45a049;
}
button:disabled {
    background-color: #cccccc;
    cursor: not-allowed;
}
#urlInput {
    flex-grow: 1;
    margin: 0 10px;
    padding: 8px;
    font-size: 14px;
}

#historyPanel {
    display: none;
    position: absolute;
    top: 60px;
    left: 10px;
    background: white;
    border: 1px solid #ccc;
    padding: 10px;
    max-height: 300px; /* it can roll if content exceeds max height*/
    overflow-y: auto;
    z-index: 1000;
}
  #historyPanel div {
    cursor: pointer;
    padding: 5px;
}

#description {
    background-color: #f0f0f0;
    padding: 10px;
    margin-top: 150px;
}


/* 2. Padding
Where Padding is Used:
#controls { padding: 10px; }
Adds space inside the control bar.

button { padding: 8px 12px; }
Adds space inside each button, making them easier to click and visually balanced.

#urlInput { padding: 8px; }
Adds space inside the input field for comfortable typing.

#historyPanel { padding: 10px; }
Adds space inside the history panel for better readability.

#historyPanel div { padding: 5px; }
Adds space around each history entry, making them easier to click.

#description { padding: 10px; }
Adds space inside the description area for better text layout.


Why Padding Matters:
Improves Usability:
Padding increases the clickable/tappable area of buttons and inputs, making the interface easier to use.
Enhances Visual Appeal:
It prevents elements from looking cramped, creating a clean and modern look.
Aids Readability:
Text and controls are easier to read and interact with when there’s enough space around them. */


/* 3. Cursor
Where Cursor is Used:

button { cursor: pointer; }
When you hover over a button, the cursor changes to a hand, indicating it’s clickable.

button:disabled { cursor: not-allowed; }
When a button is disabled, the cursor changes to a “not allowed” symbol, signaling it can’t be clicked.

#historyPanel div { cursor: pointer; }
Each history entry in t he panel shows a pointer cursor, indicating it’s interactive.

Why Cursor Styles Matter:
User Feedback:
Changing the cursor gives immediate feedback about what can be clicked or interacted with.
Accessibility:
Helps users quickly identify interactive elements, improving the overall user experience. */